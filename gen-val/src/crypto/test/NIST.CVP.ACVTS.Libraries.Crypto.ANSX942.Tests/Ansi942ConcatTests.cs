using System.Text;
using NIST.CVP.ACVTS.Libraries.Crypto.ANSIX942;
using NIST.CVP.ACVTS.Libraries.Crypto.Common.Hash.ShaWrapper;
using NIST.CVP.ACVTS.Libraries.Crypto.Common.KDF.Components.AnsiX942;
using NIST.CVP.ACVTS.Libraries.Crypto.SHA.NativeFastSha;
using NIST.CVP.ACVTS.Libraries.Math;
using NIST.CVP.ACVTS.Tests.Core.TestCategoryAttributes;
using NUnit.Framework;

namespace NIST.CVP.ACVTS.Libraries.Crypto.ANSX942.Tests
{
    [TestFixture, FastCryptoTest]
    public class Ansi942ConcatTests
    {
        private readonly IShaFactory _factory = new NativeShaFactory();

        [Test]
        [TestCase(
            "https://github.com/usnistgov/ACVP-Server/issues/98 vsId 62795 tcId 11 passing",
            ModeValues.SHA1, DigestSizes.d160,
            384,
            "8B5B223B7A002BBD6E3AC5B2A416FBC427D258A336EFC2CB7F7CC798749C72A4A0499B107B66A2D66B0CE39F6268859C1CA59D00141014276B9DA21CD697CA52DA271A29B31769C5D36CB34B162D6921989D303EEE4CCBBB734F27E42B75431F57FACDCB8A1E3A4CE48C4CE0CB88769382CE9119B7214CA7F3A548ED644E52204D7FD38CC0EBEF2AB7E7603BF3BE60BC3C8C327E96909E2B878EB77948F13344C8409F2C44B21FB54C28AA564CD335AA1E91DF98921A60ECAB183FDFA13B52613DAD0F28697F4D1B24C598F77C4A43C66D58B59B5371F1D76908AC92CD437AE41F26A0909AA303D42C320984F2C9F457AA0D231C207188DE3EAACC6C547A4E2D498AC170A2EED39174D50DDB4F2F813574000C1C71C46FE097437F6E3477AA3A0E59B374FF6958B72994E08F511F21BD1800E3FEB45D87FCFEC0DAFAA6FD2554655FFB71ED9A3558FEC179F8C16DA0713D256B59CC0F990ACAA00E34C25678A38CA1FDF2915FE3835AB00D4D67519D0DF49C511FA0B1F662518CD0D01E90080C0FE1495E7A950E8E440C0BC271EB979B702CC4CB628884D60078879FEE289066727F39FFEC0E39B967B3A72588F6DAD92CBEF8AEF67B8B48E0366DB44E7542EC3194B94CC4C35969DABB46EED0640C6D2CD6143014C1FA2BCBFDC246781475AEA27789956407AF41EF0D6FF1A75745A37DE5C9C324E464BB291D53730449764A",
            "E77B5D2DC89B4177932543E8336B6467A84302C66CB62D37DFEEA58514B63FCF7DC8D6F3DD97E908D58331018E706FCA",
            "D4BB85F4D89A5EDD3504BFCFD8CEE0FA4F6EBBE0786C76F23EF75ACA599EB01257F4A47BAE8DA44D9F395B67AD9FB9AE"
            )]
        // Our expected hex was failing against the crypto, theirs was passing
        // [TestCase(
        //     "https://github.com/usnistgov/ACVP-Server/issues/98 vsId 62795 tcId 1 client failing, using our expectedHex",
        //     ModeValues.SHA1, DigestSizes.d160,
        //     384, 
        //     "51020F0B4423F066FFA2B9CA5FA536603F307A52048D7FBE4FA2D0A8F5B6ACF116BE68A28F6D21C37A4A76F082A5CE0D240FB84D6E3291C9B49E6865E76AB166934C701DB25A7FF77DE8849657244CB818B813B72D404D86DC1B0CFF64AFABFEE0CE24DF6DD6C537B6E58DBBC96DD4B18DDD0583699234B82BDDF4778236DD0B944E042BE5DA951E4B7D4962086964D0929F3641AB403CE4FA0AB9F2E500A5004786153E3E7740C41EA0C396773EC2D5D0E98837372491B97C42A336AEA3CF1F13C090CB3F45BA1AC67D763D09B9279D4158A6B41FB8C0E8515473F882174184EDDD5FAECC043E779DA7F0080CE31DE03B255DE038ACEC636F6CDF7DCD47B2C6757310179952B29F48DF510C2C204520C2313034DDB7080DE4F9018EA37756FEA41C285213E0216B5A3BA730AAC15C60EB72E5143656E2ADD533F7CACE1CCAE0100BDD789130A3B755669BC064DD31ECB3CFAB6E5766FA7194C982B79776D1F5FC1C1DECBE102096E14C7B30C8876757EB9F419002C6FC2DE88B98B1C784F3C0976447DC352D8BF56FBE255394E2FD3D7B5A4C9B4770",
        //     "82852BF64C6CF56399CC0E5F7ADAE2DF286B51E0D1A274BE949AF3D72A29CBB21F8AC17574BB12550804F4A8AA498082",
        //     "DD8469A101758AA949516B0AE4B8F6B56438A0A119575D3265163C6BBBEA2CB58629F387A1AA163D5AE164C5206E1DB5"
        // )]
        [TestCase(
            "https://github.com/usnistgov/ACVP-Server/issues/98 vsId 62795 tcId 1 client failing, using their provided hex",
            ModeValues.SHA1, DigestSizes.d160,
            384,
            "51020F0B4423F066FFA2B9CA5FA536603F307A52048D7FBE4FA2D0A8F5B6ACF116BE68A28F6D21C37A4A76F082A5CE0D240FB84D6E3291C9B49E6865E76AB166934C701DB25A7FF77DE8849657244CB818B813B72D404D86DC1B0CFF64AFABFEE0CE24DF6DD6C537B6E58DBBC96DD4B18DDD0583699234B82BDDF4778236DD0B944E042BE5DA951E4B7D4962086964D0929F3641AB403CE4FA0AB9F2E500A5004786153E3E7740C41EA0C396773EC2D5D0E98837372491B97C42A336AEA3CF1F13C090CB3F45BA1AC67D763D09B9279D4158A6B41FB8C0E8515473F882174184EDDD5FAECC043E779DA7F0080CE31DE03B255DE038ACEC636F6CDF7DCD47B2C6757310179952B29F48DF510C2C204520C2313034DDB7080DE4F9018EA37756FEA41C285213E0216B5A3BA730AAC15C60EB72E5143656E2ADD533F7CACE1CCAE0100BDD789130A3B755669BC064DD31ECB3CFAB6E5766FA7194C982B79776D1F5FC1C1DECBE102096E14C7B30C8876757EB9F419002C6FC2DE88B98B1C784F3C0976447DC352D8BF56FBE255394E2FD3D7B5A4C9B4770",
            "82852BF64C6CF56399CC0E5F7ADAE2DF286B51E0D1A274BE949AF3D72A29CBB21F8AC17574BB12550804F4A8AA498082",
            "3898c4b53b7d0361d0447684a6f33b947ce72e6fcd3c37bc9ccb80eea878a16465238d754970d0bfab3603af263f150b"
        )]
        [TestCase(
            "https://github.com/usnistgov/ACVP-Server/issues/98 vsId 62795 tcId 2 client failing, using their provided hex",
            ModeValues.SHA1, DigestSizes.d160,
            384,
            "8B611F47FBE3C9D52A6D3B5BDBD255F8BB58B988D0F013AE25CBCD6F44475BA60AA4BED7E95D065AA6F40DF2095A054C6B10B0223E52E5463908A5023A70C9345F44B1DD22C1096B7AFBDBB63A4CBACACA07DC0D7BB6EEBC81DD98F6C4815282AE443EC424D3544B1E2BD92D0F6B27D2036D8788F377789A08DAAC770C2B975424EB1D5E22BA344D90D384F450FB973254A91E5FD9776DCFA65D82591CE51EA7202E24A699787B1DC95CFC614722FB8F37CD582ECEB782498DBADA9DD801AE8D30C8174886CB03B0",
            "5DE07D4D28AB84A2EA6908F5FA3F5ABEC43D04E830943385F372CC0BD0ADCADA950F44496F1DC46DDDD36DACCC9306BF",
            "8d25ae44ef40c6ac6dd6cacfd1ab8734ca9533cb93452bce739b495ae38ad01acef4a21dbfc4e8a040736b1879a8d72f"
        )]
        [TestCase(
            "https://github.com/usnistgov/ACVP-Server/issues/98 vsId 62795 tcId 101 client passing",
            ModeValues.SHA2, DigestSizes.d256,
            384,
            "F70BCC8F59496B8BDAB5AA9835C149F93410A8FB08CC2CA989D85788EC5E272D774F1FF19C24E86B406D598E71C09522061B1B1F7F314617FC69B441B4ABF833441C59CAE44F14502F282D4FE328123D19",
            "274D53E26177F5CBCB7718564111D520DCF97E0D1C61847182DE1A5EA7A3F0D8C244648C62C736BDCB7D2EBCF752BAF7",
            "D02A3844F2A4F69D3B81604C24E82A3CCA0369ED53D811C087EB08844A3E814D4AFDFBF5C709DDF8F7788A0CA50F81FD"
        )]
        // Our expected hex was failing against the crypto, theirs was passing
        // [TestCase(
        //     "https://github.com/usnistgov/ACVP-Server/issues/98 vsId 62795 tcId 102 client failing, using our provided hex",
        //     ModeValues.SHA2, DigestSizes.d256,
        //     384, 
        //     "B91F88EB808978D99F2B36159DE229B6D8B56C0DBF315474EF95251B94034747A70EE11F3C64BE089236DF341CBC25210D82CE4FDC07AF9ABF45503E920B10FEDF52D24283B7B92684C895EECB9339BFD437A72481A61AF951E556F58BC351A7A5AAC7567C79D934A750767700817F95BB5C01E3B33629A6294EBC5CEC60F77AC0166FCB28F49C561B5A5AABCCC4480DC1C35682BD91BE1576704B18CFF40F027BC2BB488F415911DF3FF571CB9F9674E70C50FBE2F33D7B5F7E8C81867B16104C264B62B8AF1A12BEB9767B0C9D9402F1D1946584DB284725F3F8295417CAD53B020FDFA288467B7255D70B3AE2EF57A86099D150D112DB866E6B7EAA8C6815C430DE7C75BC638BA2E4B717372EB590F2A335BCAD8F05997E851C0614695FA96C8E39F073E27B5D9DC7E0D66A916122F4FF680AB5D5247E20D1DEF09A015303BB21A898D12A105AAE6B12520DA6EB5D763687E7EC9B4B15A68B1A83BD29492F99EE7D55EE57D97CE6D4A5816B4B09BB559B9A63B16D71B87796F02AA6F72FD46CFD1D976240F8909A38D55E53432C1735C17AECFD35ACB7055F16E6E87335BC33794417623F7CD0881799DE24F6978E7DD89E5C3362CD3114FFD65F1100A8339779D56AD100",
        //     "7891F5BF9E68CDD8059E5E745406BEEED9E8C3E2961B911BCC6F901B59AF5A3CEF68D70829384574C8382322E2FEEA0B",
        //     "191A415DAC035C15AD0D3299E0352F5E9C7B917A4766E514D44649D46A875224E0F6010FAE934768A20BF59661A6084C"
        // )]
        [TestCase(
            "https://github.com/usnistgov/ACVP-Server/issues/98 vsId 62795 tcId 102 client failing, using their provided hex",
            ModeValues.SHA2, DigestSizes.d256,
            384,
            "B91F88EB808978D99F2B36159DE229B6D8B56C0DBF315474EF95251B94034747A70EE11F3C64BE089236DF341CBC25210D82CE4FDC07AF9ABF45503E920B10FEDF52D24283B7B92684C895EECB9339BFD437A72481A61AF951E556F58BC351A7A5AAC7567C79D934A750767700817F95BB5C01E3B33629A6294EBC5CEC60F77AC0166FCB28F49C561B5A5AABCCC4480DC1C35682BD91BE1576704B18CFF40F027BC2BB488F415911DF3FF571CB9F9674E70C50FBE2F33D7B5F7E8C81867B16104C264B62B8AF1A12BEB9767B0C9D9402F1D1946584DB284725F3F8295417CAD53B020FDFA288467B7255D70B3AE2EF57A86099D150D112DB866E6B7EAA8C6815C430DE7C75BC638BA2E4B717372EB590F2A335BCAD8F05997E851C0614695FA96C8E39F073E27B5D9DC7E0D66A916122F4FF680AB5D5247E20D1DEF09A015303BB21A898D12A105AAE6B12520DA6EB5D763687E7EC9B4B15A68B1A83BD29492F99EE7D55EE57D97CE6D4A5816B4B09BB559B9A63B16D71B87796F02AA6F72FD46CFD1D976240F8909A38D55E53432C1735C17AECFD35ACB7055F16E6E87335BC33794417623F7CD0881799DE24F6978E7DD89E5C3362CD3114FFD65F1100A8339779D56AD100",
            "7891F5BF9E68CDD8059E5E745406BEEED9E8C3E2961B911BCC6F901B59AF5A3CEF68D70829384574C8382322E2FEEA0B",
            "2046c0a654db4c63f0c1638cc0cd5eecca6659ee6cbbfb7a3fa49e22cde1d907aa6a77043ee56128fb1b7fc159a541d2"
        )]
        public void TestCasesFromGhIssues(string label, ModeValues mode, DigestSizes digestSize, int keyLen, string zzHex, string otherInfoHex, string expectedHex)
        {
            var zz = new BitString(zzHex);
            var otherInfo = new BitString(otherInfoHex);

            var hashFunction = new HashFunction(mode, digestSize);
            var sha = _factory.GetShaInstance(hashFunction);
            var subject = new AnsiX942Concat(sha);

            var param = new ConcatAns942Parameters
            {
                Zz = zz,
                KeyLen = keyLen,
                OtherInfo = otherInfo
            };

            var result = subject.DeriveKey(param);

            Assert.True(result.Success);
            Assert.AreEqual(new BitString(expectedHex).ToHex(), result.DerivedKey.ToHex());
        }

        // [TestCase(0)]
        // [TestCase(1)]
        // [TestCase(2)]
        // [TestCase(3)]
        [TestCase(4)]
        // [TestCase(5)]
        // [TestCase(6)]
        // [TestCase(7)]
        public void TestMultipleBitLengthsOfZz(int bitsToDrop)
        {
            var zz = new BitString
            zz = zz.GetMostSignificantBits(zz.BitLength - bitsToDrop);
            var otherInfo = new BitString("82852BF64C6CF56399CC0E5F7ADAE2DF286B51E0D1A274BE949AF3D72A29CBB21F8AC17574BB12550804F4A8AA498082");

            var hashFunction = new HashFunction(ModeValues.SHA1, DigestSizes.d160);
            var sha = _factory.GetShaInstance(hashFunction);
            var subject = new AnsiX942Concat(sha);

            var param = new ConcatAns942Parameters
            {
                Zz = zz,
                KeyLen = 384,
                OtherInfo = otherInfo
            };

            var result = subject.DeriveKey(param);

            Assert.True(result.Success);
            Assert.AreEqual(new BitString("DD8469A101758AA949516B0AE4B8F6B56438A0A119575D3265163C6BBBEA2CB58629F387A1AA163D5AE164C5206E1DB5").ToHex(), result.DerivedKey.ToHex());
        }
    }
}
